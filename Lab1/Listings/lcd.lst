


ARM Macro Assembler    Page 1 


    1 00000000         ; Desenvolvido para a placa EK-TM4C129EXL
    2 00000000         ; Matheus Passos, Lucas Yukio, Jo√£o Castilho Cardoso
    3 00000000         
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000                 THUMB                        ; Instru√ß√µes do t
                                                            ipo Thumb-2
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000         
    8 00000000         ;-------------------------------------------------------
                       ----------
    9 00000000         ; √Årea de Dados - Declara√ß√µes de vari√°veis
   10 00000000                 AREA             DATA, READONLY, ALIGN=2
   11 00000000         ; Se alguma vari√°vel for chamada em outro arquivo
   12 00000000         ;EXPORT  var [DATA,SIZE=tam]   ; Permite chamar a vari√°
                       vel var a partir de outro arquivo
   13 00000000         ;var SPACE tam                     ; Declara uma vari√°v
                       el de nome var de tam bytes a partir da primeira posi√ß√
                       £o da RAM
   14 00000000 50 61 73 
              73 6F 3A 
              20 00    String_Passo
                               DCB              "Passo: ", 0
   15 00000008                 EXPORT           String_Passo [DATA,SIZE=8] ; Er
                                                            ro aqui, l√™ primei
                                                            ra letra e para
   16 00000008         
   17 00000008 43 72 65 
              73 63 65 
              6E 74 65 
              00       String_Crescente
                               DCB              "Crescente", 0
   18 00000012                 EXPORT           String_Crescente [DATA,SIZE=10]
 
                                                            ; Erro aqui, l√™ pr
                                                            imeira letra e para
                                                            
   19 00000012         
   20 00000012 44 65 63 
              72 65 73 
              63 65 6E 
              74 65 00 String_Decrescente
                               DCB              "Decrescente", 0
   21 0000001E                 EXPORT           String_Decrescente [DATA,SIZE=1
2] 
                                                            ; Erro aqui, l√™ pr
                                                            imeira letra e para
                                                            
   22 0000001E         
   23 0000001E         ; ------------------------------------------------------
                       -------------------------
   24 0000001E         ; √Årea de C√≥digo - Tudo abaixo da diretiva a seguir se
                       r√° armazenado na mem√≥ria de c√≥digo
   25 0000001E                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000         
   27 00000000         ; Se alguma fun√ß√£o do arquivo for chamada em outro arq
                       uivo



ARM Macro Assembler    Page 2 


   28 00000000                 EXPORT           LCD_Display ; Permite chamar a 
                                                            fun√ß√£o Start a pa
                                                            rtir de outro arqui
                                                            vo. No caso startup
                                                            .s
   29 00000000                 EXPORT           LCD_Init
   30 00000000                 EXPORT           LCD_WriteNumber
   31 00000000         
   32 00000000         ; Se chamar alguma fun√ß√£o externa
   33 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma fun√ß√£o <func>
   34 00000000                 IMPORT           SysTick_Wait1us
   35 00000000                 IMPORT           PortK_Output
   36 00000000                 IMPORT           PortM_Output
   37 00000000                 IMPORT           Extract_Digits
   38 00000000         
   39 00000000         ;-------------------------------------------------------
                       -------------------------
   40 00000000         ; Fun√ß√£o LCD_Init
   41 00000000         ; Inicializa os valores necess√°rios para configurar o L
                       CD
   42 00000000         LCD_Init
   43 00000000 B501            PUSH             {R0, LR}
   44 00000002 F04F 0038       MOV              R0, #0x38   ; Configura√ß√£o do
                                                             modo de 8 bits, 2 
                                                            linhas, 5x8 pontos
   45 00000006 F000 F813       BL               LCD_Command ; Envia para o LCD
   46 0000000A F04F 0006       MOV              R0, #0x06   ; Deslocamento auto
                                                            m√°tico do cursor p
                                                            ara a direita ao en
                                                            trar com caracter
   47 0000000E F000 F80F       BL               LCD_Command ; Envia para o LCD
   48 00000012 F04F 000E       MOV              R0, #0x0E   ; Liga o display e 
                                                            o cursor
   49 00000016 F000 F80B       BL               LCD_Command ; Envia para o LCD
   50 0000001A F04F 0001       MOV              R0, #0x01   ; Comando para limp
                                                            ar o display
   51 0000001E F000 F807       BL               LCD_Command ; Envia para o LCD
   52 00000022 F44F 60C8       MOV              R0, #1600   ; Valor de delay pa
                                                            ra inicializa√ß√£o 
                                                            (em us)
   53 00000026 F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 1600u
                                                            s (tempo de execu√ß
                                                            √£o do comando)
   54 0000002A E8BD 4001       POP              {R0, LR}
   55 0000002E 4770            BX               LR
   56 00000030         
   57 00000030         ;-------------------------------------------------------
                       -------------------------
   58 00000030         ; Fun√ß√£o LCD_Helper
   59 00000030         ; Envia comando de R0 para o LCD usando PORTK e PORTM
   60 00000030         LCD_Command
   61 00000030 B501            PUSH             {R0, LR}    ; Salva o registrad
                                                            or LR na pilha
   62 00000032 F7FF FFFE       BL               PortK_Output ; Envia o sinal de
                                                             R0 para o PK
   63 00000036 F04F 0004       MOV              R0, #0x04   ; Habilita a escrit
                                                            a RS=1, RW=0, EN=1
   64 0000003A F7FF FFFE       BL               PortM_Output ; Envia o sinal pa



ARM Macro Assembler    Page 3 


                                                            ra o PM
   65 0000003E F04F 000A       MOV              R0, #10
   66 00000042 F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 10us 
                                                            (tempo para Enable)
                                                            
   67 00000046 F04F 0000       MOV              R0, #0x00   ; Limpa o sinal de 
                                                            habilita√ß√£o RS=1,
                                                             RW=0, EN=0
   68 0000004A F7FF FFFE       BL               PortM_Output ; Envia o sinal pa
                                                            ra o PM
   69 0000004E F04F 0028       MOV              R0, #40
   70 00000052 F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 40us 
                                                            (tempo de execu√ß√£
                                                            o do comando)
   71 00000056 E8BD 4001       POP              {R0, LR}    ; Restaura o regist
                                                            rador LR da pilha
   72 0000005A 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
   73 0000005C         
   74 0000005C         ;-------------------------------------------------------
                       -------------------------
   75 0000005C         ; Fun√ß√£o LCD_Data
   76 0000005C         ; Envia dado de R0 para o LCD usando PORTK e PORTM
   77 0000005C         LCD_Data
   78 0000005C B501            PUSH             {R0, LR}    ; Salva o registrad
                                                            or LR na pilha
   79 0000005E F7FF FFFE       BL               PortK_Output ; Envia o sinal de
                                                             R0 para o PK
   80 00000062 F04F 0005       MOV              R0, #0x05   ; Habilita a escrit
                                                            a RS=1, RW=1, EN=1
   81 00000066 F7FF FFFE       BL               PortM_Output ; Envia o sinal pa
                                                            ra o PM
   82 0000006A F04F 000A       MOV              R0, #10
   83 0000006E F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 10us 
                                                            (tempo para Enable)
                                                            
   84 00000072 F04F 0000       MOV              R0, #0x00   ; Limpa o sinal de 
                                                            habilita√ß√£o RS=1,
                                                             RW=1, EN=0
   85 00000076 F7FF FFFE       BL               PortM_Output ; Envia o sinal pa
                                                            ra o PM
   86 0000007A F04F 0028       MOV              R0, #40
   87 0000007E F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 40us 
                                                            (tempo de execu√ß√£
                                                            o do comando)
   88 00000082 E8BD 4001       POP              {R0, LR}    ; Restaura o regist
                                                            rador LR da pilha
   89 00000086 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
   90 00000088         
   91 00000088         ; ------------------------------------------------------
                       -------------------------
   92 00000088         ; Fun√ß√£o LCD_WriteNumber
   93 00000088         ; Converte um n√∫mero em ASCII e envia para o LCD
   94 00000088         ; Par√¢metro de entrada: R0 --> N√∫mero a ser exibido
   95 00000088         LCD_WriteNumber
   96 00000088 B507            PUSH             {R0, R1, R2, LR} ; Salva os reg
                                                            istradores usados
   97 0000008A F7FF FFFE       BL               Extract_Digits ; Extrai os d√≠g



ARM Macro Assembler    Page 4 


                                                            itos para R1 e R2
   98 0000008E F101 0130       ADD              R1, R1, #48 ; Converte para ASC
                                                            II ('0' = 48)
   99 00000092 4608            MOV              R0, R1      ; Move a dezena par
                                                            a R0
  100 00000094 F7FF FFE2       BL               LCD_Data    ; Envia a dezena pa
                                                            ra o LCD
  101 00000098 F102 0230       ADD              R2, R2, #48 ; Converte para ASC
                                                            II ('0' = 48)
  102 0000009C 4610            MOV              R0, R2      ; Move a unidade pa
                                                            ra R0
  103 0000009E F7FF FFDD       BL               LCD_Data    ; Envia a unidade p
                                                            ara o LCD
  104 000000A2 E8BD 4007       POP              {R0, R1, R2, LR} ; Restaura os 
                                                            registradores usado
                                                            s
  105 000000A6 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
  106 000000A8         
  107 000000A8         ; ------------------------------------------------------
                       -------------------------
  108 000000A8         ; Fun√ß√£o LCD_WriteString
  109 000000A8         ; Envia uma string para o LCD
  110 000000A8         ; Par√¢metro de entrada: R0 --> Endere√ßo da string
  111 000000A8         LCD_WriteString
  112 000000A8 B507            PUSH             {R0, R1, R2, LR} ; Salva o regi
                                                            strador LR na pilha
                                                            
  113 000000AA 4602            MOV              R2, R0      ; Copia o endere√ßo
                                                             da string para R2
  114 000000AC         Write_Loop
  115 000000AC F812 1B01       LDRB             R1, [R2], #1 ; L√™ o pr√≥ximo c
                                                            aractere da string
  116 000000B0 2900            CMP              R1, #0      ; Verifica se √© o 
                                                            caractere nulo (fim
                                                             da string)
  117 000000B2 D003            BEQ              Write_End   ; Se for nulo, term
                                                            ina a fun√ß√£o
  118 000000B4 4608            MOV              R0, R1      ; Move o caractere 
                                                            para R0
  119 000000B6 F7FF FFD1       BL               LCD_Data    ; Envia o caractere
                                                             para o LCD
  120 000000BA E7F7            B                Write_Loop  ; Continua enviando
                                                             os pr√≥ximos carac
                                                            teres
  121 000000BC         
  122 000000BC         Write_End
  123 000000BC E8BD 4007       POP              {R0, R1, R2, LR} ; Restaura o r
                                                            egistrador LR da pi
                                                            lha
  124 000000C0 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
  125 000000C2         
  126 000000C2         ; ------------------------------------------------------
                       -------------------------
  127 000000C2         ; Fun√ß√£o LCD_Display
  128 000000C2         ; Mostra na tela o valor do passo R5 e o modo R6 (Cresce
                       nte ou Decrescente)
  129 000000C2         LCD_Display



ARM Macro Assembler    Page 5 


  130 000000C2 B501            PUSH             {R0, LR}
  131 000000C4 F04F 000E       MOV              R0, #0x0E   ; Liga o cursor
  132 000000C8 F7FF FFB2       BL               LCD_Command ; Envia o comando p
                                                            ara o LCD
  133 000000CC F04F 0001       MOV              R0, #0x01   ; Limpa o display
  134 000000D0 F7FF FFAE       BL               LCD_Command ; Envia o comando p
                                                            ara o LCD
  135 000000D4 480B            LDR              R0, =String_Passo ; Carrega o e
                                                            ndere√ßo da string 
                                                            "Passo: "
  136 000000D6 F7FF FFE7       BL               LCD_WriteString ; Envia a strin
                                                            g para o LCD
  137 000000DA 4628            MOV              R0, R5      ; Carrega o valor d
                                                            o passo em R0
  138 000000DC F7FF FFFE       BL               LCD_WriteNumber ; Envia o valor
                                                             do passo para o LC
                                                            D
  139 000000E0 F04F 00C0       MOV              R0, #0xC0   ; Comando para move
                                                            r o cursor para a s
                                                            egunda linha
  140 000000E4 F7FF FFA4       BL               LCD_Command ; Envia o comando p
                                                            ara o LCD
  141 000000E8 2E00            CMP              R6, #0      ; Verifica o modo (
                                                            0 = crescente, 1 = 
                                                            decrescente)
  142 000000EA D001            BEQ              Modo_Crescente ; Se for 0, exib
                                                            e "Crescente"
  143 000000EC 4806            LDR              R0, =String_Decrescente ; Caso 
                                                            contr√°rio, carrega
                                                             "Decrescente"
  144 000000EE E000            B                Modo_Exibir
  145 000000F0         
  146 000000F0         Modo_Crescente
  147 000000F0 4806            LDR              R0, =String_Crescente ; Carrega
                                                             o endere√ßo da str
                                                            ing "Crescente"
  148 000000F2         
  149 000000F2         Modo_Exibir
  150 000000F2 F7FF FFD9       BL               LCD_WriteString ; Envia a strin
                                                            g para o LCD
  151 000000F6         
  152 000000F6 F04F 000C       MOV              R0, #0x0C   ; Desliga o cursor
  153 000000FA F7FF FF99       BL               LCD_Command ; Envia o comando p
                                                            ara o LCD
  154 000000FE E8BD 4001       POP              {R0, LR}
  155 00000102 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
  156 00000104         
  157 00000104         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  158 00000104         ; Fim do Arquivo
  159 00000104         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  160 00000104                 ALIGN                        ; Garante que o fim
                                                             da se√ß√£o est√° a
                                                            linhado
  161 00000104                 END                          ; Fim do arquivo



ARM Macro Assembler    Page 6 


              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\revox\AppData\Local\arm\p
acks\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" --p
redefine="__UVISION_VERSION SETA 542" --predefine="TM4C129ENCPDT SETA 1" --list
=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 10 in file lcd.s
   Uses
      None
Comment: DATA unused
String_Crescente 00000008

Symbol: String_Crescente
   Definitions
      At line 17 in file lcd.s
   Uses
      At line 18 in file lcd.s
      At line 147 in file lcd.s

String_Decrescente 00000012

Symbol: String_Decrescente
   Definitions
      At line 20 in file lcd.s
   Uses
      At line 21 in file lcd.s
      At line 143 in file lcd.s

String_Passo 00000000

Symbol: String_Passo
   Definitions
      At line 14 in file lcd.s
   Uses
      At line 15 in file lcd.s
      At line 135 in file lcd.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file lcd.s
   Uses
      None
Comment: .text unused
LCD_Command 00000030

Symbol: LCD_Command
   Definitions
      At line 60 in file lcd.s
   Uses
      At line 45 in file lcd.s
      At line 47 in file lcd.s
      At line 49 in file lcd.s
      At line 51 in file lcd.s
      At line 132 in file lcd.s
      At line 134 in file lcd.s
      At line 140 in file lcd.s
      At line 153 in file lcd.s

LCD_Data 0000005C

Symbol: LCD_Data
   Definitions
      At line 77 in file lcd.s
   Uses
      At line 100 in file lcd.s
      At line 103 in file lcd.s
      At line 119 in file lcd.s

LCD_Display 000000C2

Symbol: LCD_Display
   Definitions
      At line 129 in file lcd.s
   Uses
      At line 28 in file lcd.s
Comment: LCD_Display used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 42 in file lcd.s
   Uses
      At line 29 in file lcd.s
Comment: LCD_Init used once
LCD_WriteNumber 00000088

Symbol: LCD_WriteNumber
   Definitions
      At line 95 in file lcd.s
   Uses
      At line 30 in file lcd.s
      At line 138 in file lcd.s

LCD_WriteString 000000A8



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: LCD_WriteString
   Definitions
      At line 111 in file lcd.s
   Uses
      At line 136 in file lcd.s
      At line 150 in file lcd.s

Modo_Crescente 000000F0

Symbol: Modo_Crescente
   Definitions
      At line 146 in file lcd.s
   Uses
      At line 142 in file lcd.s
Comment: Modo_Crescente used once
Modo_Exibir 000000F2

Symbol: Modo_Exibir
   Definitions
      At line 149 in file lcd.s
   Uses
      At line 144 in file lcd.s
Comment: Modo_Exibir used once
Write_End 000000BC

Symbol: Write_End
   Definitions
      At line 122 in file lcd.s
   Uses
      At line 117 in file lcd.s
Comment: Write_End used once
Write_Loop 000000AC

Symbol: Write_Loop
   Definitions
      At line 114 in file lcd.s
   Uses
      At line 120 in file lcd.s
Comment: Write_Loop used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Extract_Digits 00000000

Symbol: Extract_Digits
   Definitions
      At line 37 in file lcd.s
   Uses
      At line 97 in file lcd.s
Comment: Extract_Digits used once
PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 35 in file lcd.s
   Uses
      At line 62 in file lcd.s
      At line 79 in file lcd.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 36 in file lcd.s
   Uses
      At line 64 in file lcd.s
      At line 68 in file lcd.s
      At line 81 in file lcd.s
      At line 85 in file lcd.s

SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 34 in file lcd.s
   Uses
      At line 53 in file lcd.s
      At line 66 in file lcd.s
      At line 70 in file lcd.s
      At line 83 in file lcd.s
      At line 87 in file lcd.s

4 symbols
355 symbols in table
