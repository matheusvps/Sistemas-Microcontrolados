


ARM Macro Assembler    Page 1 


    1 00000000         ; Desenvolvido para a placa EK-TM4C129EXL
    2 00000000         ; Matheus Passos, Lucas Yukio, Jo√£o Castilho Cardoso
    3 00000000         
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000                 THUMB                        ; Instru√ß√µes do t
                                                            ipo Thumb-2
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000         
    8 00000000         ;-------------------------------------------------------
                       ----------
    9 00000000         ; √Årea de Dados - Declara√ß√µes de vari√°veis
   10 00000000                 AREA             DATA, READONLY, ALIGN=2
   11 00000000         ; Se alguma vari√°vel for chamada em outro arquivo
   12 00000000         ;EXPORT  var [DATA,SIZE=tam]   ; Permite chamar a vari√°
                       vel var a partir de outro arquivo
   13 00000000         ;var SPACE tam                     ; Declara uma vari√°v
                       el de nome var de tam bytes a partir da primeira posi√ß√
                       £o da RAM 
   14 00000000         
   15 00000000 50 61 73 
              73 6F 3A 
              20 00    String_Passo
                               DCB              "Passo: ", 0
   16 00000008                 EXPORT           String_Passo [DATA,SIZE=8]
   17 00000008         
   18 00000008 43 72 65 
              73 63 65 
              6E 74 65 
              00       String_Crescente
                               DCB              "Crescente", 0
   19 00000012                 EXPORT           String_Crescente [DATA,SIZE=10]
   20 00000012         
   21 00000012 44 65 63 
              72 65 73 
              63 65 6E 
              74 65 00 String_Decrescente
                               DCB              "Decrescente", 0
   22 0000001E                 EXPORT           String_Decrescente [DATA,SIZE=1
2]
   23 0000001E         
   24 0000001E         ; ------------------------------------------------------
                       -------------------------
   25 0000001E         ; √Årea de C√≥digo - Tudo abaixo da diretiva a seguir se
                       r√° armazenado na mem√≥ria de c√≥digo
   26 0000001E                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000         
   28 00000000         ; Se alguma fun√ß√£o do arquivo for chamada em outro arq
                       uivo 
   29 00000000                 EXPORT           LCD_Display ; Permite chamar a 
                                                            fun√ß√£oo Start a p
                                                            artir de outro arqu
                                                            ivo. No caso startu
                                                            p.s
   30 00000000                 EXPORT           LCD_Init
   31 00000000                 EXPORT           LCD_WriteNumber
   32 00000000         



ARM Macro Assembler    Page 2 


   33 00000000         ; Se chamar alguma fun√ß√£o externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma fun√ß√£o <func>
   35 00000000                 IMPORT           SysTick_Wait1us
   36 00000000                 IMPORT           PortK_Output
   37 00000000                 IMPORT           PortM_Output
   38 00000000                 IMPORT           Extract_Digits
   39 00000000         
   40 00000000         ;-------------------------------------------------------
                       -------------------------
   41 00000000         ; Fun√ß√£o LCD_Init
   42 00000000         ; Inicializa os valores necess√°rios para configurar o L
                       CD
   43 00000000         LCD_Init
   44 00000000 B501            PUSH             {R0, LR}
   45 00000002 F04F 0038       MOV              R0, #0x38   ; Configura√ß√£o do
                                                             modo de 8 bits, 2 
                                                            linhas, 5x8 pontos
   46 00000006 F000 F817       BL               LCD_Helper  ; Envia para o LCD
   47 0000000A F04F 0006       MOV              R0, #0x06   ; Deslocamento auto
                                                            m√°tico do cursor p
                                                            ara a direita ao en
                                                            trar com caracter
   48 0000000E F000 F813       BL               LCD_Helper  ; Envia para o LCD
   49 00000012 F04F 000E       MOV              R0, #0x0E   ; Liga o display e 
                                                            o cursor
   50 00000016 F000 F80F       BL               LCD_Helper  ; Envia para o LCD
   51 0000001A F04F 000D       MOV              R0, #0x0D   ; Configura cursor 
                                                            piscante
   52 0000001E F000 F80B       BL               LCD_Helper  ; Envia para o LCD
   53 00000022 F04F 0001       MOV              R0, #0x01   ; Comando para limp
                                                            ar o display
   54 00000026 F000 F807       BL               LCD_Helper  ; Envia para o LCD
   55 0000002A F44F 60C8       MOV              R0, #1600   ; Valor de delay pa
                                                            ra inicializa√ß√£o 
                                                            (em us)
   56 0000002E F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 1600u
                                                            s (tempo de execu√ß
                                                            √£o do comando)
   57 00000032 E8BD 4001       POP              {R0, LR}
   58 00000036 4770            BX               LR
   59 00000038         
   60 00000038         ;-------------------------------------------------------
                       -------------------------
   61 00000038         ; Fun√ß√£o LCD_Helper
   62 00000038         ; Envia comando de R0 para o LCD usando PORTK e PORTM
   63 00000038         LCD_Helper
   64 00000038 B501            PUSH             {R0, LR}    ; Salva o registrad
                                                            or LR na pilha
   65 0000003A F7FF FFFE       BL               PortK_Output ; Envia o sinal de
                                                             R0 para o PK
   66 0000003E F04F 0005       MOV              R0, #2_101  ; Habilita a escrit
                                                            a RS=1, RW=0, EN=1
   67 00000042 F7FF FFFE       BL               PortM_Output ; Envia o sinal pa
                                                            ra o PM
   68 00000046 F04F 000A       MOV              R0, #10
   69 0000004A F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 10us 
                                                            (tempo para Enable)
                                                            



ARM Macro Assembler    Page 3 


   70 0000004E F04F 0004       MOV              R0, #2_100  ; Limpa o sinal de 
                                                            habilita√ß√£o RS=1,
                                                             RW=0, EN=0
   71 00000052 F7FF FFFE       BL               PortM_Output ; Envia o sinal pa
                                                            ra o PM
   72 00000056 F04F 0028       MOV              R0, #40
   73 0000005A F7FF FFFE       BL               SysTick_Wait1us ; Aguarda 40us 
                                                            (tempo de execu√ß√£
                                                            o do comando)
   74 0000005E E8BD 4001       POP              {R0, LR}    ; Restaura o regist
                                                            rador LR da pilha
   75 00000062 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
   76 00000064         
   77 00000064         ; ------------------------------------------------------
                       -------------------------
   78 00000064         ; Fun√ß√£o LCD_WriteNumber
   79 00000064         ; Converte um n√∫mero em ASCII e envia para o LCD
   80 00000064         ; Par√¢metro de entrada: R0 --> N√∫mero a ser exibido
   81 00000064         LCD_WriteNumber
   82 00000064 B507            PUSH             {R0, R1, R2, LR} ; Salva os reg
                                                            istradores usados
   83 00000066 F7FF FFFE       BL               Extract_Digits
   84 0000006A F101 0130       ADD              R1, R1, #48 ; Converte para ASC
                                                            II ('0' = 48)
   85 0000006E 4608            MOV              R0, R1      ; Move a dezena par
                                                            a R0
   86 00000070 F7FF FFE2       BL               LCD_Helper  ; Envia a dezena pa
                                                            ra o LCD
   87 00000074 F102 0230       ADD              R2, R2, #48 ; Converte para ASC
                                                            II ('0' = 48)
   88 00000078 4610            MOV              R0, R2      ; Move a unidade pa
                                                            ra R0
   89 0000007A F7FF FFDD       BL               LCD_Helper  ; Envia a unidade p
                                                            ara o LCD
   90 0000007E E8BD 4007       POP              {R0, R1, R2, LR} ; Restaura os 
                                                            registradores usado
                                                            s
   91 00000082 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
   92 00000084         
   93 00000084         ; ------------------------------------------------------
                       -------------------------
   94 00000084         ; Fun√ß√£o LCD_WriteString
   95 00000084         ; Envia uma string para o LCD
   96 00000084         ; Par√¢metro de entrada: R0 --> Endere√ßo da string
   97 00000084         LCD_WriteString
   98 00000084 B503            PUSH             {R0, R1, LR} ; Salva o registra
                                                            dor LR na pilha
   99 00000086         
  100 00000086         Write_Loop
  101 00000086 F810 1B01       LDRB             R1, [R0], #1 ; L√™ o pr√≥ximo c
                                                            aractere da string 
                                                            e incrementa o pont
                                                            eiro
  102 0000008A 2900            CMP              R1, #0      ; Verifica se √© o 
                                                            caractere nulo (fim
                                                             da string)
  103 0000008C D003            BEQ              Write_End   ; Se for nulo, term



ARM Macro Assembler    Page 4 


                                                            ina a fun√ß√£o
  104 0000008E 4608            MOV              R0, R1      ; Move o caractere 
                                                            para R0
  105 00000090 F7FF FFD2       BL               LCD_Helper  ; Envia o caractere
                                                             para o LCD
  106 00000094 E7F7            B                Write_Loop  ; Continua enviando
                                                             os pr√≥ximos carac
                                                            teres
  107 00000096         
  108 00000096         Write_End
  109 00000096 E8BD 4003       POP              {R0, R1, LR} ; Restaura o regis
                                                            trador LR da pilha
  110 0000009A 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
  111 0000009C         
  112 0000009C         ; ------------------------------------------------------
                       -------------------------
  113 0000009C         ; Fun√ß√£o LCD_Display
  114 0000009C         ; Mostra na tela o valor do passo e o modo (Crescente ou
                        Decrescente)
  115 0000009C         LCD_Display
  116 0000009C B501            PUSH             {R0, LR}
  117 0000009E 480A            LDR              R0, =String_Passo ; Carrega o e
                                                            ndere√ßo da string 
                                                            "Passo: "
  118 000000A0 F7FF FFF0       BL               LCD_WriteString ; Envia a strin
                                                            g para o LCD
  119 000000A4 4628            MOV              R0, R5      ; Carrega o valor d
                                                            o passo em R0
  120 000000A6 F7FF FFFE       BL               LCD_WriteNumber ; Envia o valor
                                                             do passo para o LC
                                                            D
  121 000000AA F04F 00C0       MOV              R0, #0xC0   ; Comando para move
                                                            r o cursor para a s
                                                            egunda linha
  122 000000AE F7FF FFC3       BL               LCD_Helper  ; Envia o comando p
                                                            ara o LCD
  123 000000B2 2E00            CMP              R6, #0      ; Verifica o modo (
                                                            0 = crescente, 1 = 
                                                            decrescente)
  124 000000B4 D001            BEQ              Modo_Crescente ; Se for 0, exib
                                                            e "Crescente"
  125 000000B6 4805            LDR              R0, =String_Decrescente ; Caso 
                                                            contr√°rio, carrega
                                                             "Decrescente"
  126 000000B8 E000            B                Modo_Exibir
  127 000000BA         
  128 000000BA         Modo_Crescente
  129 000000BA 4805            LDR              R0, =String_Crescente ; Carrega
                                                             o endere√ßo da str
                                                            ing "Crescente"
  130 000000BC         
  131 000000BC         Modo_Exibir
  132 000000BC F7FF FFE2       BL               LCD_WriteString ; Envia a strin
                                                            g para o LCD
  133 000000C0 F85D EB04       POP              {LR}
  134 000000C4 4770            BX               LR          ; Retorna da fun√ß√
                                                            £o
  135 000000C6         



ARM Macro Assembler    Page 5 


  136 000000C6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  137 000000C6         ; Fim do Arquivo
  138 000000C6         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  139 000000C6 00 00           ALIGN                        ; Garante que o fim
                                                             da se√ß√£o est√° a
                                                            linhado
  140 000000C8                 END                          ; Fim do arquivo
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\lucas\AppData\Local\arm\p
acks\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" --p
redefine="__UVISION_VERSION SETA 542" --predefine="TM4C129ENCPDT SETA 1" --list
=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 10 in file lcd.s
   Uses
      None
Comment: DATA unused
String_Crescente 00000008

Symbol: String_Crescente
   Definitions
      At line 18 in file lcd.s
   Uses
      At line 19 in file lcd.s
      At line 129 in file lcd.s

String_Decrescente 00000012

Symbol: String_Decrescente
   Definitions
      At line 21 in file lcd.s
   Uses
      At line 22 in file lcd.s
      At line 125 in file lcd.s

String_Passo 00000000

Symbol: String_Passo
   Definitions
      At line 15 in file lcd.s
   Uses
      At line 16 in file lcd.s
      At line 117 in file lcd.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 26 in file lcd.s
   Uses
      None
Comment: .text unused
LCD_Display 0000009C

Symbol: LCD_Display
   Definitions
      At line 115 in file lcd.s
   Uses
      At line 29 in file lcd.s
Comment: LCD_Display used once
LCD_Helper 00000038

Symbol: LCD_Helper
   Definitions
      At line 63 in file lcd.s
   Uses
      At line 46 in file lcd.s
      At line 48 in file lcd.s
      At line 50 in file lcd.s
      At line 52 in file lcd.s
      At line 54 in file lcd.s
      At line 86 in file lcd.s
      At line 89 in file lcd.s
      At line 105 in file lcd.s
      At line 122 in file lcd.s

LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 43 in file lcd.s
   Uses
      At line 30 in file lcd.s
Comment: LCD_Init used once
LCD_WriteNumber 00000064

Symbol: LCD_WriteNumber
   Definitions
      At line 81 in file lcd.s
   Uses
      At line 31 in file lcd.s
      At line 120 in file lcd.s

LCD_WriteString 00000084

Symbol: LCD_WriteString
   Definitions
      At line 97 in file lcd.s
   Uses
      At line 118 in file lcd.s
      At line 132 in file lcd.s

Modo_Crescente 000000BA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Modo_Crescente
   Definitions
      At line 128 in file lcd.s
   Uses
      At line 124 in file lcd.s
Comment: Modo_Crescente used once
Modo_Exibir 000000BC

Symbol: Modo_Exibir
   Definitions
      At line 131 in file lcd.s
   Uses
      At line 126 in file lcd.s
Comment: Modo_Exibir used once
Write_End 00000096

Symbol: Write_End
   Definitions
      At line 108 in file lcd.s
   Uses
      At line 103 in file lcd.s
Comment: Write_End used once
Write_Loop 00000086

Symbol: Write_Loop
   Definitions
      At line 100 in file lcd.s
   Uses
      At line 106 in file lcd.s
Comment: Write_Loop used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Extract_Digits 00000000

Symbol: Extract_Digits
   Definitions
      At line 38 in file lcd.s
   Uses
      At line 83 in file lcd.s
Comment: Extract_Digits used once
PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 36 in file lcd.s
   Uses
      At line 65 in file lcd.s
Comment: PortK_Output used once
PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 37 in file lcd.s
   Uses
      At line 67 in file lcd.s
      At line 71 in file lcd.s

SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 35 in file lcd.s
   Uses
      At line 56 in file lcd.s
      At line 69 in file lcd.s
      At line 73 in file lcd.s

4 symbols
354 symbols in table
